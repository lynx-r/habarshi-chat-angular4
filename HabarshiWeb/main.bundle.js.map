{"version":3,"sources":["webpack:///./src/app/model/user.model.ts","webpack:///./src/app/service/texting.service.ts","webpack:///./src/app/texting/texting.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/model/habarshi-message-type.enum.ts","webpack:///./src/app/model/habarshi-robot.model.ts","webpack:///./src/app/model/server-status.enum.ts","webpack:///./src/app/service/audio.service.ts","webpack:///./src/app/texting/message/message.component.ts","webpack:///./src/app/util/guid.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/shared/constants.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/header/header.component.css","webpack:///./src/app/texting/message/message.component.css","webpack:///./src/app/texting/texting.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/texting/message/message.component.html","webpack:///./src/app/texting/texting.component.html","webpack:///./src/app/util/util.ts","webpack:///./src/app/service/roster.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/util/store.ts","webpack:///./src/app/service/query-params.service.ts","webpack:///./src/app/model/message-type.enum.ts","webpack:///./src/app/model/message.model.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/model/habarshi-file.model.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export class User {\n  anonymous: boolean;\n  avatar: string;\n  color: string;\n  descr: string;\n  email: string;\n  fullname: string;\n  hash: string;\n  id: number;\n  jid: string;\n  name: string;\n  password: string;\n  supervisor: boolean;\n  telephony_home: string;\n  telephony_mob: string;\n  title: string;\n  username: string;\n  web: string;\n  session: string;\n  room: boolean;\n\n  constructor(session: string, username: string, room?: boolean) {\n    this.session = session;\n    this.username = username;\n    this.room = room;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/user.model.ts","import {Injectable} from '@angular/core';\nimport {Http, Response} from \"@angular/http\";\nimport {Observable} from \"rxjs/Observable\";\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport {Message} from \"../model/message.model\";\nimport {ConstantsService} from \"../shared/constants.service\";\nimport {Utils} from \"../util/util\";\nimport {UserService} from \"./user.service\";\nimport {ServerStatus} from \"../model/server-status.enum\";\nimport {RosterService} from \"./roster.service\";\nimport {EmptyObservable} from \"rxjs/observable/EmptyObservable\";\nimport {QueryParamsService} from \"./query-params.service\";\nimport {MessageType} from \"../model/message-type.enum\";\n\n@Injectable()\nexport class TextingService {\n\n  constructor(private http: Http,\n              private userService: UserService,\n              private rosterService: RosterService,\n              private query: QueryParamsService,\n              private constants: ConstantsService) {\n  }\n\n  sendMessage(message: Message): Observable<ServerStatus> {\n    const session = this.userService.getSession();\n    let params: string = [\n      `session=${session}`,\n      `text=${message.text}`,\n      `id=${message.id}`,\n      `to=${message.to}`\n    ].join('&');\n    let queryUrl = `${this.query.getServerUrl()}/v1/chat/send?${params}`;\n    return this.http.get(queryUrl)\n      .map(this.extractMessage)\n      .catch(Utils.handleError);\n  }\n\n  private extractMessage(response: Response): ServerStatus {\n    let body = response.json();\n    return new ServerStatus(body.comment, body.ok);\n  }\n\n  getMessages(after?: string): Observable<Message[]> {\n    const session = this.userService.getSession();\n    if (session == null) {\n      return new EmptyObservable();\n    }\n    const buddy = this.rosterService.selectedUser;\n    if (buddy == null) {\n      return new EmptyObservable();\n    }\n    let params: string = `session=${session}&with=${buddy.jid}`;\n    if (after != null) {\n      params = params.concat(`&after=${after}`);\n    }\n    const queryUrl = `${this.query.getServerUrl()}/user/mam?${params}`;\n    return this.http.get(queryUrl)\n      .map((resp: Response) => {\n        return this.extractMessages(resp);\n      }).catch(Utils.handleError);\n  }\n\n  private extractMessages(response: Response): Message[] {\n    let body = response.json();\n    if (!body.ok) {\n      throw new Error(body.comment);\n    }\n\n    return body.mam.history\n      .map(item =>\n        new Message(item.from, item.id, item.jid, item.stamp, item.text, item.time, item.to, item.marker));\n  }\n\n  updateMessageStatuses(latestMessages: Message[], originMessages: Message[]): Observable<Message[]> {\n    if (latestMessages.length == 0) {\n      return new EmptyObservable();\n    }\n    const session = this.userService.getSession();\n    const ids = latestMessages.map((message) => {\n      return message.id;\n    });\n    const params = [\n      `session=${session}`,\n      `ids=${ids}`\n    ].join('&');\n    const queryUrl = `${this.query.getServerUrl()}/user/mam_ack?${params}`;\n    return this.http.get(queryUrl)\n      .map((resp: Response) => {\n        const body = resp.json();\n        if (!body.ok) {\n          throw new Error(body.comment);\n        }\n        Object.entries(body.ack).forEach(([id, marker]) => {\n          let msgs = originMessages.filter((m) => m.id == id);\n          if (msgs.length == 1) {\n            msgs[0].marker = marker;\n            if (marker == this.constants.ACKNOWLEDGED || marker == this.constants.MARKABLE) {\n              const index = latestMessages.indexOf(msgs[0]);\n              latestMessages.splice(index, 1);\n            }\n          }\n        });\n        return latestMessages;\n      })\n      .catch(Utils.handleError);\n  }\n\n  markMessages(latestMessages: Message[], marker: string) {\n    if (latestMessages.length == 0) {\n      return new EmptyObservable();\n    }\n    const session = this.userService.getSession();\n    for (let message of latestMessages) {\n      if (message.marker == this.constants.ACKNOWLEDGED\n        || Utils.getMessageType(message, this.userService.user.jid) == MessageType.OUT) {\n        continue;\n      }\n      const params = [\n        `session=${session}`,\n        `message_id=${message.id}`,\n        `marker=${marker}`,\n        `to=${message.to}`\n      ].join('&');\n      const queryUrl = `${this.query.getServerUrl()}/v1/chat/marker?${params}`;\n      this.http.get(queryUrl)\n        .map((resp: Response) => {\n          const body = resp.json();\n          console.log(body);\n          if (!body.ok) {\n            throw new Error(body.comment);\n          }\n        })\n        .catch(Utils.handleError)\n        .subscribe();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/texting.service.ts","import {AfterViewChecked, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {TextingService} from \"../service/texting.service\";\nimport {UserService} from \"../service/user.service\";\nimport {Message} from \"../model/message.model\";\nimport {GUID} from \"../util/guid\";\nimport {RosterService} from \"../service/roster.service\";\nimport {Observable} from \"rxjs/Observable\";\nimport {ConstantsService} from \"../shared/constants.service\";\nimport \"rxjs/add/observable/timer\";\nimport {Roster} from \"../model/roster.model\";\nimport {FileItem, FileUploader, FileUploaderOptions} from \"ng2-file-upload\";\nimport {Store} from \"../util/store\";\nimport {HabarshiFile} from \"../model/habarshi-file.model\";\nimport {Utils} from \"../util/util\";\nimport {AudioService} from \"../service/audio.service\";\nimport {Subscription} from \"rxjs/Subscription\";\n\n@Component({\n  selector: 'app-texting',\n  templateUrl: './texting.component.html',\n  styleUrls: ['./texting.component.css'],\n  providers: [AudioService, TextingService]\n})\nexport class TextingComponent implements OnInit, AfterViewChecked {\n\n  _messageRef: ElementRef;\n  private blinkTitle: boolean;\n  private blinkSubscription: Subscription;\n  private doBlink: boolean;\n  private latestMessages: Message[] = [];\n\n  @ViewChild('messageRef') set messageRef(content: ElementRef) {\n    this._messageRef = content;\n  };\n\n  get messageRef(): ElementRef {\n    return this._messageRef;\n  }\n\n  _messagesRef: ElementRef;\n  @ViewChild('messagesRef') set messagesRef(content: ElementRef) {\n    this._messagesRef = content;\n  }\n\n  get messagesRef(): ElementRef {\n    return this._messagesRef;\n  }\n\n  messages: Message[] = [];\n  newMessage: boolean;\n  initScroll: boolean = true;\n  errorMessage: string;\n  roster: Roster[];\n  private statusMessages: Message[] = [];\n  uploader: FileUploader;\n  private fileUploaderOptions: FileUploaderOptions;\n  hasBaseDropZoneOver: boolean = false;\n  private toggleRed: boolean;\n  private toggleRedSubscription: Subscription;\n\n  constructor(private textingService: TextingService,\n              private userService: UserService,\n              private rosterService: RosterService,\n              private audioService: AudioService,\n              private constants: ConstantsService) {\n  }\n\n  ngOnInit() {\n    this.userService.userLoggedInEvent.subscribe(() => {\n      // after login we have upload_url in store\n      this.initFileUploader();\n      Observable.timer(1000, this.constants.REFRESH_MESSAGES_MILLISEC)\n        .subscribe(() => this.refreshMessages());\n      Observable.timer(0, this.constants.REFRESH_ROSTER_MILLISEC)\n        .subscribe(() => {\n          this.rosterService.getRoster()\n            .subscribe((roster) => {\n              this.roster = roster;\n              this.getMessages();\n              this.userService.user = this.rosterService.users[this.userService.user.username];\n            });\n        });\n      this.onBlur();\n    });\n    this.messageRef.nativeElement.innerText = '';\n  }\n\n  onBlur() {\n    this.blinkSubscription = Observable.timer(0, 1000).subscribe(() => {\n      if (this.newMessage) {\n        if (this.blinkTitle) {\n          document.title = this.constants.TITLE_NEW_MESSAGE;\n          this.blinkTitle = false;\n        } else {\n          document.title = this.constants.TITLE;\n          this.blinkTitle = true;\n        }\n      }\n    });\n  }\n\n  onFocus() {\n    document.title = this.constants.TITLE;\n    if (this.blinkSubscription) {\n      this.blinkSubscription.unsubscribe();\n      this.textingService.markMessages(this.latestMessages, this.constants.ACKNOWLEDGED);\n    }\n  }\n\n  private initFileUploader() {\n    this.fileUploaderOptions = {\n      url: Store.get(this.constants.SERVER_UPLOAD_URL),\n      autoUpload: true\n    };\n    this.uploader = new FileUploader(this.fileUploaderOptions);\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n    this.uploader.onSuccessItem = (item: FileItem, response: string) => {\n      const body = JSON.parse(response);\n      if (!body.ok) {\n        Utils.handleError(body.comment);\n        return;\n      }\n      const message = this.createHabarshiMessage(item, body);\n      this.textingService.sendMessage(message).subscribe((data) => {\n        this.messageSent(data, message);\n      });\n    };\n  }\n\n  private createHabarshiMessage(item: FileItem, body: any) {\n    const selectedUser = this.rosterService.selectedUser;\n    const user = this.userService.user;\n    const id: string = new GUID().toString();\n    const habarshiText: HabarshiFile = new HabarshiFile(item.file.name, body.full_url, body.preview_url);\n    return new Message(user.jid, id, user.jid, new Date().getTime(), habarshiText.toString(),\n      new Date(), selectedUser.jid);\n  }\n\n\n  ngAfterViewChecked() {\n    this.scrollBottom();\n  }\n\n  getMessages() {\n    this.textingService.getMessages()\n      .subscribe(\n        messages => {\n          this.messages = messages;\n          this.errorMessage = '';\n          this.statusMessages = messages.slice();\n        }, error => this.errorMessage = error\n      );\n  }\n\n  refreshMessages() {\n    if (this.messages.length == 0) {\n      return;\n    }\n\n    const after = this.messages[this.messages.length - 1].id;\n    this.textingService.getMessages(after).subscribe((latest) => {\n      if (latest.length != 0) {\n        this.messages = this.messages.concat(latest);\n        this.latestMessages = latest;\n        this.newMessage = true;\n        this.textingService.markMessages(latest, this.constants.RECEIVED);\n      }\n    });\n    this.textingService.updateMessageStatuses(this.statusMessages, this.messages).subscribe((messages) => {\n      this.statusMessages = messages;\n    });\n  }\n\n  private\n  scrollBottom() {\n    if (this.messagesRef == null) {\n      return;\n    }\n    let nativeElement = this.messagesRef.nativeElement;\n    if (this.newMessage || this.initScroll) {\n      nativeElement.scrollTop = nativeElement.scrollTop +\n        nativeElement.scrollHeight * 2;\n      if (document.hasFocus()) {\n        this.newMessage = false;\n      }\n      if (nativeElement.scrollTop > 0) {\n        this.initScroll = false;\n      }\n    }\n  }\n\n  onSendMessage(event: KeyboardEvent) {\n    const text = this.messageRef.nativeElement.innerHTML;\n    if (!text || event != null && (event.keyCode != 13 || event.keyCode == 13 && event.shiftKey)) {\n      return;\n    }\n    const selectedUser = this.rosterService.selectedUser;\n    const user = this.userService.user;\n    const id: string = new GUID().toString();\n    const message = new Message(user.jid, id, user.jid, new Date().getTime(), text, new Date(), selectedUser.jid);\n    this.textingService.sendMessage(message)\n      .subscribe(\n        data => {\n          this.messageSent(data, message);\n        },\n        error => this.errorMessage = error\n      );\n  }\n\n  private messageSent(data, message: Message) {\n    if (data.ok) {\n      this.messages.push(message);\n      this.statusMessages.push(message);\n      this.messageRef.nativeElement.innerText = '';\n      this.errorMessage = '';\n    } else {\n      this.errorMessage = data.comment;\n    }\n    this.newMessage = true;\n  }\n\n  onFileOver(e: any) {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  onSendAudioMessage() {\n    if (!AudioService.isSupportRecording()) {\n      Utils.handleError('Запись аудио не поддерживается');\n      return;\n    }\n    this.audioService.toggle().then((file) => {\n      if (!file) { // start\n        let timer = Observable.timer(0, 1000);\n        this.toggleRedSubscription = timer.subscribe(() => {\n          this.toggleRed = !this.toggleRed;\n        });\n        return;\n      }\n      // got file\n      this.toggleRed = false;\n      this.toggleRedSubscription.unsubscribe();\n      this.uploader.addToQueue([file]);\n      this.uploader.uploadAll();\n    });\n  }\n\n  getRed() {\n    if (this.toggleRed) {\n      return 'red';\n    }\n    return '';\n  }\n\n  isLoggedIn() {\n    return this.userService.loggedIn;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/texting/texting.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 155;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 155\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {TextingComponent} from \"./texting/texting.component\";\nimport {AuthGuard} from \"./auth.guard\";\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component:\n    TextingComponent,\n    pathMatch: 'full',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profile', children: []\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TextingComponent } from './texting/texting.component';\nimport { MessageComponent } from './texting/message/message.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport {TextingService} from \"./service/texting.service\";\nimport {UserService} from \"./service/user.service\";\nimport {ConstantsService} from \"./shared/constants.service\";\nimport {RosterService} from \"./service/roster.service\";\nimport {FileUploadModule} from \"ng2-file-upload\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AuthGuard} from \"./auth.guard\";\nimport {QueryParamsService} from \"./service/query-params.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TextingComponent,\n    MessageComponent,\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    FileUploadModule,\n    AppRoutingModule\n  ],\n  providers: [AuthGuard, ConstantsService, QueryParamsService, TextingService, UserService, RosterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/footer/footer.component.ts","import {Component, OnInit} from '@angular/core';\nimport {User} from \"../model/user.model\";\nimport {UserService} from \"../service/user.service\";\nimport {Observable} from 'rxjs/Rx';\nimport \"rxjs/add/observable/timer\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  user: User;\n  errorMessage;\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit() {\n    if (this.userService.loggedIn) {\n      Observable.timer(500).subscribe(() => {\n        this.userService.sessionConfig()\n          .subscribe(user => {\n              this.user = user;\n              this.errorMessage = '';\n            }, error => this.errorMessage\n          );\n      });\n    }\n  }\n\n  isLoggedIn() {\n    return this.userService.loggedIn;\n  }\n\n  auth(username: HTMLInputElement, passwd: HTMLInputElement) {\n    if (!(username.value && passwd.value)) {\n      this.errorMessage = 'Укажите логин и пароль';\n      return;\n    }\n    this.userService.auth(username.value, passwd.value)\n      .subscribe(user => {\n        this.user = user;\n        this.errorMessage = '';\n        // JOIN TO GROUP CHAT\n        this.userService.join().subscribe(() => {\n        }, error => this.errorMessage = error);\n      }, error => this.errorMessage = error);\n  }\n\n  logout() {\n    this.userService.leave().subscribe(() => {\n      this.doLogout()\n    }, error => {\n      this.doLogout();\n    });\n  }\n\n  private doLogout() {\n    this.userService.logout()\n      .subscribe(() => {\n          this.user = null;\n          this.errorMessage = '';\n        }, error => this.errorMessage = error\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","export enum HabarshiMessageType {\n  TEXT,\n  FILE,\n  ROBOT\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/habarshi-message-type.enum.ts","import * as mime from \"mime\";\n\nexport class HabarshiRobot {\n  action: string;\n  actor: string;\n  object: string;\n\n\n  constructor(action: string, actor: string, object: string) {\n    this.action = action;\n    this.actor = actor;\n    this.object = object;\n  }\n\n  static fromText(text: string) {\n    const rx = /<action>\\|<([^>]+)>,[\\n\\s]*<actor>\\|<([^>]+)>,[\\n\\s]*<object>\\|<([^>]+)>/g;\n    const match = rx.exec(text);\n    const file_name = match[1];\n    const full_url = match[2];\n    const preview_url = match[3];\n    return new this(file_name, full_url, preview_url)\n  }\n\n  toString() {\n    return `<HabarshiServiceMessage><action>|<${this.action}>,<actor>|<${this.actor}>,<object>|<${this.object}>`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/habarshi-robot.model.ts","export class ServerStatus {\n  comment: string;\n  ok: boolean;\n\n  constructor(comment: string, ok: boolean) {\n    this.comment = comment;\n    this.ok = ok;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/server-status.enum.ts","import {EventEmitter, Injectable, Output} from '@angular/core';\nimport {Utils} from \"../util/util\";\n\ndeclare const MediaRecorder: any;\n\n@Injectable()\nexport class AudioService {\n\n  private chunks = [];\n  private constraints = {audio: true};\n  private mediaRecorder: any;\n  private recording: boolean;\n  @Output() blobReady = new EventEmitter<Blob>();\n\n  constructor() {\n    if (AudioService.isSupportRecording()) {\n      navigator.mediaDevices.getUserMedia(this.constraints).then((stream) => {\n        this.mediaRecorder = new MediaRecorder(stream);\n        this.mediaRecorder.ondataavailable = (e) => {\n          this.blobReady.emit(e.data);\n        };\n      }, Utils.handleError);\n    } else {\n\n    }\n  }\n\n  toggle(): Promise<any> {\n    if (this.recording) {\n      return this.stop();\n    } else {\n      return this.start();\n    }\n  }\n\n  private start(): Promise<any> {\n    this.mediaRecorder.start();\n    this.recording = true;\n    return Promise.resolve(false);\n  }\n\n  private stop(): Promise<File> {\n    this.mediaRecorder.stop();\n    return new Promise((resolve, reject) => {\n      this.blobReady.subscribe((blob) => {\n        const file = new File([blob], 'audio-' + (new Date).toISOString().replace(/[:.]/g, '-') + '.webm',\n          {'type': 'video/webm'});\n        this.chunks = [];\n        this.recording = false;\n        resolve(file);\n      }, (error) => {\n        Utils.handleError(error);\n        reject(null);\n      })\n    });\n  }\n\n  public static isSupportRecording(): boolean {\n    return !!navigator.mediaDevices;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/audio.service.ts","import {Component, Input, OnInit} from '@angular/core';\nimport {Message} from \"../../model/message.model\";\nimport {User} from \"../../model/user.model\";\nimport {UserService} from \"../../service/user.service\";\nimport {MessageType} from \"../../model/message-type.enum\";\nimport {ConstantsService} from \"../../shared/constants.service\";\nimport {Utils} from \"../../util/util\";\nimport {RosterService} from \"../../service/roster.service\";\nimport {HabarshiFile} from \"../../model/habarshi-file.model\";\nimport {HabarshiRobot} from \"../../model/habarshi-robot.model\";\nimport {HabarshiMessageType} from \"../../model/habarshi-message-type.enum\";\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n\n  user: User;\n  MessageType: typeof MessageType = MessageType;\n  @Input() message: Message;\n  dateFormat: string;\n  messageType: MessageType;\n  fromFull: string;\n  habarshiMessageType: HabarshiMessageType;\n  HabarshiMessage: typeof HabarshiMessageType = HabarshiMessageType;\n  habarshiFile: HabarshiFile;\n  habarshiRobot: HabarshiRobot;\n\n  constructor(private userService: UserService, private rosterService: RosterService, private constants: ConstantsService) {\n    this.dateFormat = constants.DATE_FORMAT;\n  }\n\n  ngOnInit() {\n    this.user = this.userService.user;\n    const username = this.message.from.split('@')[0];\n    const users: Map<string, User> = this.rosterService.users;\n    if (this.message.text.startsWith(this.constants.HABARSHI_HEADER)) {\n      if (this.message.from == this.constants.ROBOT_ROOMS) {\n        this.habarshiRobot = HabarshiRobot.fromText(this.message.text);\n        this.habarshiMessageType = HabarshiMessageType.ROBOT;\n        this.messageType = MessageType.SERVICE;\n        this.fullName(users, this.habarshiRobot.actor);\n      } else {\n        this.habarshiFile = HabarshiFile.fromText(this.message.text);\n        this.habarshiMessageType = HabarshiMessageType.FILE;\n        this.messageType = Utils.getMessageType(this.message, this.user.jid);\n        this.fullName(users, username);\n      }\n    } else {\n      this.habarshiMessageType = HabarshiMessageType.TEXT;\n      this.messageType = Utils.getMessageType(this.message, this.user.jid);\n      this.fullName(users, username);\n    }\n  }\n\n  private fullName(users: Map<string, User>, username: string) {\n    let userFromRoster = users[username];\n    if (userFromRoster != null) {\n      this.fromFull = userFromRoster.name;\n    } else {\n      this.fromFull = 'Не в сети';\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/texting/message/message.component.ts","export class GUID {\n  private str: string;\n\n  constructor(str?: string) {\n    this.str = str || GUID.getNewGUIDString();\n  }\n\n  toString() {\n    return this.str;\n  }\n\n  private static getNewGUIDString() {\n    // your favourite guid generation function could go here\n    // ex: http://stackoverflow.com/a/8809472/188246\n    let d = new Date().getTime();\n    if (window.performance && typeof window.performance.now === \"function\") {\n      d += performance.now(); //use high-precision timer if available\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      let r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d/16);\n      return (c=='x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/util/guid.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConstantsService {\n\n  readonly SERVER_URL: string = 'serverurl';\n  readonly DATE_FORMAT: string = 'h:mm, EEEE d';\n  readonly SESSION_KEY: string = 'session';\n  readonly REFRESH_ROSTER_MILLISEC: number = 60 * 1000;\n  readonly REFRESH_MESSAGES_MILLISEC: number = 2500;\n  readonly SERVER_UPLOAD_URL = 'uploadto';\n  readonly QUERY_PARAMS: string = 'queryparams';\n  readonly HABARSHI_HEADER: string = '<HabarshiServiceMessage>';\n  readonly ROBOT_ROOMS: string = 'robot.rooms@habarshi.com';\n  readonly TITLE: string = 'Habarshi';\n  readonly TITLE_NEW_MESSAGE: string = 'Новое сообщение';\n  readonly RECEIVED: string = 'received';\n  readonly ACKNOWLEDGED: string = 'acknowledged';\n  readonly MARKABLE: string = 'markable';\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 228\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"footer {\\n  background-color: #e6e6e6;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.css\n// module id = 229\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".navbar {\\n  background-color: red;\\n  margin-bottom: 40px;\\n}\\n\\n.navbar-brand {\\n  color: white;\\n}\\n\\n.auth-form {\\n  width: 50%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.css\n// module id = 230\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".message {\\n  padding: 10px;\\n  margin-bottom: 10px;\\n  border-radius: 6px;\\n}\\n\\n/* message types */\\n.msg-IN {\\n  max-width: 70vh;\\n  background: rgba(255, 0, 0, 0.4);\\n}\\n\\n.msg-OUT {\\n  max-width: 90vh;\\n  background: rgba(200, 200, 200, 0.4);\\n  float: right;\\n  text-align: right;\\n}\\n\\n.msg-SERVICE {\\n  text-align: center;\\n  font-size: small;\\n  font-style: italic;\\n}\\n\\n/* statuses */\\n.check-success, .received.acknowledged .check-success {\\n  display: none;\\n}\\n\\n.double-check-success {\\n  display: none;\\n}\\n\\n.acknowledged .double-check-success {\\n  display: inline-block;\\n}\\n\\n.received .check-success {\\n  display: inline-block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/texting/message/message.component.css\n// module id = 231\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".messages {\\n  height: 70vh;\\n  overflow: auto;\\n}\\n\\n.messages.hover {\\n  background-color: rgba(0, 173, 255, 0.27);\\n}\\n.messages.drop {\\n  background-color: dodgerblue;\\n}\\n#attachButton.error {\\n  background-color: red;\\n}\\n\\n#recordAudioPanel {\\n  position: absolute;\\n  right: 90px;\\n  bottom: 40px;\\n  background-color: rgba(128, 128, 128, 0.18);\\n  padding: 8px;\\n  border-radius: 8px;\\n}\\n\\n#closeRecordAudioPanel {\\n  margin-top: 8px;\\n  margin-left: 8px;\\n  cursor: pointer;\\n}\\n\\n.red, .red:hover, .red:focus {\\n  background-color: red;\\n}\\n\\n.nv-file-over {\\n  background-color: rgba(14, 238, 35, 0.22);\\n}\\n\\ndiv.contenteditable:empty:before {\\n  content: attr(data-placeholder);\\n  color: gray;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  padding: 6px;\\n  width: 100%;\\n  height: 100%;\\n}\\ndiv.contenteditable:empty:after {\\n  content: '\\\\200B';\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/texting/texting.component.css\n// module id = 232\n// module chunks = 1","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 240\n// module chunks = 1","module.exports = \"<footer>\\n  <p class=\\\"float-right\\\">\\n    <small>© HABARSHI Ltd.</small>\\n  </p>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.html\n// module id = 241\n// module chunks = 1","module.exports = \"<header>\\n  <nav class=\\\"navbar navbar-toggleable-md navbar-light bg-faded\\\">\\n    <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\n            data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\"\\n            aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">HABARSHI</a>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <div class=\\\"d-flex justify-content-end col-md-12\\\">\\n        <div *ngIf=\\\"!isLoggedIn(); else greetUser\\\" class=\\\"input-group auth-form\\\">\\n          <input #username type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" title=\\\"Логин\\\"\\n                 required=\\\"required\\\" placeholder=\\\"Логин\\\">\\n          <input #passwd type=\\\"text\\\" name=\\\"passwd\\\" class=\\\"form-control\\\" title=\\\"Пароль\\\"\\n                 required=\\\"required\\\" placeholder=\\\"Пароль\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button (click)=\\\"auth(username, passwd)\\\" type=\\\"submit\\\" class=\\\"btn btn-secondary pull-right\\\">Войти</button>\\n          </span>\\n        </div>\\n        <ng-template #greetUser>\\n          <div>\\n            <button (click)=\\\"logout()\\\" class=\\\"btn btn-secondary\\\">Выйти</button>\\n          </div>\\n        </ng-template>\\n        {{errorMessage}}\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = 242\n// module chunks = 1","module.exports = \"<div style=\\\"overflow: hidden;\\\">\\n  <div class=\\\"message {{'msg-' + MessageType[messageType]}} {{message.marker}}\\\">\\n    <p><b> {{ messageType == MessageType.IN ? fromFull : (messageType == MessageType.OUT ? 'Я' : message.jid) }}</b>\\n      {{ message.time | date: dateFormat}}\\n      <span class=\\\"fa-lg check-success\\\">\\n        <i class=\\\"fa fa-check\\\" style=\\\"margin-left:4px\\\"></i>\\n        </span>\\n      <span class=\\\"fa-stack fa-lg double-check-success\\\">\\n        <i class=\\\"fa fa-check fa-stack-1x\\\" style=\\\"margin-left:4px\\\"></i>\\n        <i class=\\\"fa fa-check  fa-stack-1x\\\" style=\\\"margin-left:-4px\\\"></i>\\n      </span>\\n    </p>\\n    <div [ngSwitch]=\\\"habarshiMessageType\\\">\\n      <div *ngSwitchCase=\\\"HabarshiMessage.FILE\\\">\\n        <ng-template [ngIf]=\\\"habarshiFile.type.startsWith('video/webm')\\\">\\n          <div class=\\\"audio\\\">\\n            <audio [src]=\\\"habarshiFile.full_url\\\" controls></audio>\\n          </div>\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"habarshiFile.type.startsWith('image')\\\">\\n          <div class=\\\"image\\\">\\n            <a [href]=\\\"habarshiFile.full_url\\\" target=\\\"_blank\\\"><img [src]=\\\"habarshiFile.preview_url\\\"/></a>\\n          </div>\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"!habarshiFile.type.startsWith('video/webm') && !habarshiFile.type.startsWith('image')\\\">\\n          <div class=\\\"doc\\\">\\n            <a [href]=\\\"habarshiFile.full_url\\\" target=\\\"_blank\\\">{{habarshiFile.file_name}}</a>\\n          </div>\\n        </ng-template>\\n      </div>\\n      <div *ngSwitchCase=\\\"HabarshiMessage.ROBOT\\\">\\n        <div>Пользователь {{fromFull}} {{ habarshiRobot.action == 'bye' ? 'покинул(а)' : 'вошел(а) в' }} комнату\\n        </div>\\n      </div>\\n      <div *ngSwitchDefault>\\n        <div [innerHTML]=\\\"message.text\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/texting/message/message.component.html\n// module id = 243\n// module chunks = 1","module.exports = \"<main class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"offset-3 col-6\\\">\\n      <div [hidden]=\\\"!isLoggedIn()\\\">\\n        <div [hidden]=\\\"messages.length == 0\\\">\\n          <div #messagesRef\\n               class=\\\"form-control messages\\\"\\n               title=\\\"Сообщения\\\"\\n               ng2FileDrop\\n               [uploader]=\\\"uploader\\\"\\n               [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n               (fileOver)=\\\"onFileOver($event)\\\">\\n            <app-message *ngFor=\\\"let msg of messages\\\" [message]=\\\"msg\\\"></app-message>\\n          </div>\\n          <div class=\\\"input-group\\\">\\n            <div #messageRef type=\\\"text\\\"\\n                 contenteditable=\\\"true\\\"\\n                 tabindex=\\\"0\\\"\\n                 class=\\\"form-control contenteditable\\\"\\n                 (keypress)=\\\"onSendMessage($event)\\\"\\n                 (blur)=\\\"onBlur()\\\"\\n                 (focus)=\\\"onFocus()\\\"\\n                 data-placeholder=\\\"Введите ваше сообщение\\\">\\n            </div>\\n            <span class=\\\"input-group-btn\\\">\\n            <button (click)=\\\"onSendAudioMessage()\\\" class=\\\"btn btn-default\\\" [style.background-color]=\\\"getRed()\\\"><i\\n              class=\\\"fa fa-microphone\\\"></i></button>\\n        </span>\\n            <span class=\\\"input-group-btn\\\">\\n            <input id=\\\"uploadFile\\\" name=\\\"file\\\" type=\\\"file\\\" class=\\\"hidden-xs-up \\\">\\n            <button id=\\\"attachButton\\\" class=\\\"btn btn-default\\\">\\n                <i id=\\\"attachIcon\\\" class=\\\"fa fa-paperclip\\\"></i></button>\\n        </span>\\n            <span class=\\\"input-group-btn\\\">\\n            <button (click)=\\\"onSendMessage()\\\"\\n                    class=\\\"btn btn-primary\\\"><img src=\\\"../../assets/images/send_amber.png\\\" class=\\\"img-fluid\\\"\\n                                                 style=\\\"width: 19px;\\\"/></button>\\n        </span>\\n          </div>\\n\\n        </div>\\n        <div [hidden]=\\\"messages.length != 0\\\">\\n          Загрузка сообщений…\\n        </div>\\n      </div>\\n      <div [hidden]=\\\"isLoggedIn()\\\">\\n        Пожалуйста авторизуйтесь\\n      </div>\\n    </div>\\n  </div>\\n</main>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/texting/texting.component.html\n// module id = 244\n// module chunks = 1","import {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/observable/throw\";\nimport {Message} from \"../model/message.model\";\nimport {MessageType} from \"../model/message-type.enum\";\n\nexport class Utils {\n\n  public static handleError(error: Response | any) {\n    // In a real world app, you might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = (<any>body).error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n  public static getMessageType(message: Message, originFromJid: string): MessageType {\n    if (message.from == originFromJid) {\n      return MessageType.OUT;\n    } else {\n      return MessageType.IN;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/util/util.ts","import {Injectable} from '@angular/core';\nimport {User} from \"../model/user.model\";\nimport {Store} from \"../util/store\";\nimport {ConstantsService} from \"../shared/constants.service\";\nimport {Http, Response} from \"@angular/http\";\nimport {Utils} from \"../util/util\";\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport {Roster} from \"../model/roster.model\";\nimport {UserService} from \"./user.service\";\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport {AuthGuard} from \"../auth.guard\";\nimport {QueryParamsService} from \"./query-params.service\";\n\n@Injectable()\nexport class RosterService {\n\n  roster: Roster[];\n  users: Map<string, User> = new Map<string, User>();\n  selectedUser: User;\n\n  constructor(private http: Http, private query: QueryParamsService, private constants: ConstantsService) {\n    const queryParams = Store.get(constants.QUERY_PARAMS);\n    this.createBuddy(queryParams);\n  }\n\n  public createBuddy(queryParams: Params) {\n    if (queryParams == null) {\n      throw new Error(`Не верная ссылка`);\n    }\n    const to = queryParams.to;\n    this.selectedUser = new User(null, to, true);\n    this.selectedUser.jid = to;\n  }\n\n  getRoster() {\n    const session = Store.get(this.constants.SESSION_KEY);\n    if (session == null) {\n      return;\n    }\n    const queryUrl = `${this.query.getServerUrl()}/user/roster?session=${session}`;\n    return this.http.get(queryUrl)\n      .map((resp: Response) => {\n        this.extractRoster(resp);\n      }).catch(Utils.handleError);\n  }\n\n  private extractRoster(resp: Response) {\n    const body = resp.json();\n    try {\n      if (body.ok == false) {\n        throw new Error(body.comment);\n      }\n    } finally {\n      this.roster = null;\n    }\n    this.roster = body;\n    this.parseUsers(this.roster);\n    return this.roster;\n  }\n\n  private parseUsers(roster: Roster[]) {\n    roster.forEach(r => {\n      r.users.forEach((item) => {\n        this.users[item.username] = item;\n      });\n      if (r.children.length != 0) {\n        this.parseUsers(r.children);\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/roster.service.ts","import {EventEmitter, Injectable, OnInit, Output} from '@angular/core';\nimport {User} from \"../model/user.model\";\nimport {Observable} from \"rxjs/Observable\";\nimport {Http, Response} from \"@angular/http\";\nimport {ConstantsService} from \"../shared/constants.service\";\nimport {Utils} from \"../util/util\";\nimport {Store} from \"../util/store\";\nimport {QueryParamsService} from \"./query-params.service\";\nimport {EmptyObservable} from \"rxjs/observable/EmptyObservable\";\nimport {RosterService} from \"./roster.service\";\n\n@Injectable()\nexport class UserService implements OnInit {\n\n  public loggedIn = false;\n  public user: User;\n\n  @Output() userLoggedInEvent = new EventEmitter<User>();\n\n  constructor(private http: Http,\n              private rosterService:RosterService,\n              private query: QueryParamsService,\n              private constants: ConstantsService) {\n    this.loggedIn = !!Store.get(this.constants.SESSION_KEY);\n  }\n\n  ngOnInit() {\n  }\n\n  sessionConfig(): Observable<User> {\n    const session = Store.get(this.constants.SESSION_KEY);\n    const queryUrl = `${this.query.getServerUrl()}/session-config?session=${session}`;\n    return this.http.get(queryUrl)\n      .map((resp: Response) => {\n        this.extractUser(resp);\n        this.loggedIn = true;\n      }).catch(Utils.handleError)\n  }\n\n  auth(username: string, passwd: string): Observable<User> {\n    if (this.loggedIn) {\n      return Observable.of(this.user);\n    }\n    const params: string = [\n      `username=${username}`,\n      `password=${passwd}`\n    ].join('&');\n    const queryUrl = `${this.query.getServerUrl()}/auth/1?${params}`;\n    return this.http.get(queryUrl)\n      .map((resp: Response) => {\n        this.extractUser(resp);\n        this.loggedIn = true;\n      }).catch(Utils.handleError);\n  }\n\n  join() {\n    if (!this.loggedIn) {\n      return new EmptyObservable();\n    }\n    const session: string = Store.get(this.constants.SESSION_KEY);\n    const buddy = this.rosterService.selectedUser;\n    if (buddy == null) {\n      return new EmptyObservable();\n    }\n    const params: string = [\n      `session=${session}`,\n      `to=${buddy.jid}`\n    ].join('&');\n    const queryUrl = `${this.query.getServerUrl()}/v1/chat/join?${params}`;\n    return this.http.get(queryUrl).map((resp: Response) => {\n      const body = resp.json();\n      if (!body.ok) {\n        throw new Error(body.comment);\n      }\n    }).catch(Utils.handleError);\n  }\n\n  leave() {\n    if (!this.loggedIn) {\n      return new EmptyObservable();\n    }\n    const session: string = Store.get(this.constants.SESSION_KEY);\n    const buddy = this.rosterService.selectedUser;\n    if (buddy == null) {\n      return new EmptyObservable();\n    }\n    const params: string = [\n      `session=${session}`,\n      `jid=${buddy.jid}`\n    ].join('&');\n    const queryUrl = `${this.query.getServerUrl()}/v1/chat/leave?${params}`;\n    return this.http.get(queryUrl).map((resp: Response) => {\n      const body = resp.json();\n      if (!body.ok) {\n        throw new Error(body.comment);\n      }\n    }).catch(Utils.handleError);\n  }\n\n  logout(): Observable<void> {\n    if (!this.loggedIn) {\n      return;\n    }\n    const session: string = Store.get(this.constants.SESSION_KEY);\n    const queryUrl = `${this.query.getServerUrl()}/logout?session=${session}`;\n    return this.http.get(queryUrl)\n      .map((resp: Response) => this.loggedIn = false)\n      .catch(Utils.handleError)\n  }\n\n  private extractUser(resp: Response) {\n    const body = resp.json();\n    try {\n      if (body.session == false || body.ok == false) {\n        throw new Error(body.comment);\n      }\n    } finally {\n      Store.put(this.constants.SESSION_KEY, null);\n      this.loggedIn = false;\n      this.user = null;\n    }\n    this.user = new User(body.session, body.username);\n    Store.put(this.constants.SESSION_KEY, this.user.session);\n    this.userLoggedInEvent.emit(this.user);\n\n    const uploadUrl = `http://${body.uploads.address}:${body.uploads.port}/upload`;\n    Store.put(this.constants.SERVER_UPLOAD_URL, uploadUrl);\n    return this.user;\n  }\n\n  getSession() {\n    return Store.get(this.constants.SESSION_KEY);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/user.service.ts","import { Injectable } from '@angular/core';\n\nexport class Store {\n\n  constructor() { }\n\n  public static put(key: string, value: any) {\n    if (value == null) {\n      localStorage.setItem(key, null);\n      return;\n    }\n    let data = JSON.stringify(value);\n    localStorage.setItem(key, data);\n  }\n\n  public static get(key: string): any {\n    let value = JSON.parse(localStorage.getItem(key));\n    if (value === \"undefined\" || value === \"null\") {\n      return null;\n    }\n    return value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/util/store.ts","import { Injectable } from '@angular/core';\nimport {ConstantsService} from \"../shared/constants.service\";\nimport {Store} from \"../util/store\";\n\n@Injectable()\nexport class QueryParamsService {\n\n  constructor(private constants: ConstantsService) { }\n\n  getServerUrl() {\n    return `https://${Store.get(this.constants.SERVER_URL)}`;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/query-params.service.ts","export enum MessageType {\n  IN,\n  OUT,\n  SERVICE\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/message-type.enum.ts","export class Message {\n  from: string;\n  id: string;\n  jid: string;\n  marker: string = 'markable';\n  stamp: number;\n  text: string;\n  time: Date;\n  to: string;\n\n  constructor(from: string,\n              id: string,\n              jid: string,\n              stamp: number,\n              text: string,\n              time: Date,\n              to: string,\n              marker?: string) {\n    this.from = from;\n    this.id = id;\n    this.jid = jid;\n    this.marker = marker;\n    this.stamp = stamp;\n    this.text = text;\n    this.time = time;\n    this.to = to;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/message.model.ts","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Params} from '@angular/router';\nimport {Observable} from 'rxjs/Observable';\nimport {ConstantsService} from \"./shared/constants.service\";\nimport * as _ from \"lodash\";\nimport {Store} from \"./util/store\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private constants: ConstantsService) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot,\n              state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    // temporally solution\n    if (!_.isEmpty(next.queryParams)) {\n      Store.put(this.constants.QUERY_PARAMS, next.queryParams);\n      if (next.queryParams.api != null) {\n        Store.put(this.constants.SERVER_URL, next.queryParams.api);\n      }\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.guard.ts","import * as mime from \"mime\";\n\nexport class HabarshiFile {\n  file_name: string;\n  full_url: string;\n  preview_url: string;\n  type: string;\n\n\n  constructor(file_name: string, full_url: string, preview_url: string) {\n    this.file_name = file_name;\n    this.full_url = full_url;\n    this.preview_url = preview_url;\n    this.type = mime.lookup(full_url);\n  }\n\n  static fromText(text: string) {\n    const rx = /<file_name>\\|<([^>]+)>,<full_url>\\|<([^>]+)>(?:,<preview_url>\\|<([^>]+)>)?/g;\n    const match = rx.exec(text);\n    if (!match) {\n      console.log(text);\n      return null;\n    }\n    const file_name = match[1];\n    const full_url = match[2];\n    const preview_url = match[3];\n    return new this(file_name, full_url, preview_url)\n  }\n\n  toString() {\n    return `<HabarshiServiceMessage><file_name>|<${this.file_name}>,<full_url>|<${this.full_url}>,<preview_url>|<${this.preview_url}>`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/habarshi-file.model.ts"],"sourceRoot":""}